@import url('https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;1,100&display=swap');

/* Para mudar a fonte voce copia no import e depois poe o nome da fonte no body*/

*{
    box-sizzing: border-box;
    padding: 0;
    margin: 0;
}

body{
    font-family: 'Roboto', sans-serif;

}
a{
    text-decoration: none;
}

.btn{
    display: inline-block;
    padding: 15px 60px;
    font-size: 1.1rem;
    text-transform: uppercase; /*Para que o texto fique maiusculo*/
    background: #111;
    color: #eee;
    border-radius: 5px;
    transition: background 500ms ease;

}

.btn:hover{
    cursor: pointer;
    background: #000;

}

.headline{
    font-size: 2.2rem;
    text-transform: uppercase;
    font-weight: bold;
    text-align: center;
    padding-bottom: 50px;
    letter-spacing: 2px;
}

/*Navbar*/

#navbar{  /*é a parte de cima no it solutions*/
    width: 100%;
    background: #111;
    color: #eee;
    height: 80px;
}

#navbar-container{
    align-items : center; /*Coloquei esse align items aqui porque no final não estava funcioando*/
    width: 80%;
    height: 100%;
    margin: auto;
    display: flex; /*facilitar o posicionamento e o alinhamento de elementos em um contêiner*/
    justify-content: space-between /*A propriedade justify-content: space-between em CSS é usada em conjunção com o display: flex para controlar o espaçamento entre os elementos dentro de um contêiner flexível ao longo do eixo principal. Essa propriedade distribui o espaço disponível de maneira uniforme entre os elementos, mas também coloca o máximo espaço possível entre os elementos extremos, ou seja, o espaço entre o primeiro e o último elemento é maximizado.*/
    

}

.logo{
    font-size: 2rem;
}

#navbar-items{
    display: flex;
    list-style: none;
    text-transform: uppercase; /*Pra ficar tudo maiusc*/
}

#navbar-items li{
    padding: 10px;
    
}

/*Showcase onde está a imagem maior*/
#showcase{
    height: 95vh; /*Vai ocupar 95% da visão da tela. 95 pq a nav tambem conta*/
    display: flex;
    justify-content: center;
    align-items: center;
    color: #eee;
    background: url('img/showcase.jpg') no-repeat center/cover; /*Para a imagem não se repetir (no-repeat) se ela não preencher tudoé pra ela ficar no centro (center) e pra o conteiner tentar encaixar essa imagem o maximo possível dentro dele(cover)*/

    /*overlay. Um truquezinho para que a imagem do site fique mais escura*/
    background-color: rgba(0,0,0,0.4); 
    background-blend-mode: color; /*Para mesclar essa cor com o background*/
}

#showcase-container{ /*Onde estão os itens */
    text-align: center;

}

#showcase-container h2 {
    font-size: 2.5rem;
}

#showcase-container p {
    font-size: 1.2rem;
    padding-bottom: 7px 0; /*Em baixo e dos lados*/

}

/*Clientes*/
#clients{
    width: 100%; /*Eu havia colocado width 100vh e não funcionou pq Em resumo, a diferença principal é que width: 100vh faz com que o elemento ocupe toda a altura da janela do navegador, enquanto width: 100% faz com que o elemento ocupe toda a largura do elemento pai. A escolha entre eles depende das necessidades de layout específicas do seu design.*/
    background-color: #eee;
    color: #111;
    padding: 15px;
}
#clients-container{
    
    display: grid; /* /*O display: grid é uma propriedade CSS que permite criar layouts bidimensionais em páginas da web, organizando os elementos em uma grade (ou tabela) de linhas e colunas. O Grid Layout é uma técnica de layout introduzida no CSS3 que oferece um alto nível de controle sobre o posicionamento e o alinhamento dos elementos em relação a essa grade.*/
    grid-template-columns: repeat(4,1fr); /*Quero que ele tenha 4 colunas que ocupam 1 fração da minha div total. se eu um i f r  colocasse  ficaria 1 embaixo do outro cada uma ocupando 25%*/justify-items: center;
    padding: 15px;
}




.clients{ /*Imagens*/
  display: inline-block; /*Pra que seja considerado como um bloco*/
  width: 25%; /*Pra que cada simbolo ocupe 25 % da tela*/
}

/*About*/

#features{
    width: 100%;
    background: #222;
    color: #eee;
    padding: 50px;

}

#features-container{ /*A parte de dentro*/

    width: 100%;
    margin: auto;
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-column-gap: 50px; /*Cria um espaço entre as colunas*/


}

.feature{
    display: flex;
    flex-direction: column;
    background: #333;
    padding: 20px;
    border-radius: 5px;
}

.feature-title{
    font-size: 1.5rem;
    font-weight: bold;

}

/*Iphone*/

#product{
    width: 100%;
    padding: 50px;
}

#product-container{
    display: flex;
    justify-content: center;
    align-items: center;

}

#items{
    width: 650px;
}

#items.item{
    display: flex;
    padding: 10px;
    margin: 15px 0;
    font-size: 1.2rem;
}
/*testimonials*/

.testimonials{
    display: flex;
    align-items: center;
    font-size: 1.2rem;
    background: #333;
    padding: 15px;
    margin: 15px 0;
    border-radius: 5px;

}

#testimonials{ /*fundo*/
    width: 100%;
    background: #222;
    color: #eee;
    padding: 50px;

}

#testimonials-container{ /*dentro*/
    width:80%;
    margin: auto;
    display: flex;
    align-items: center;
    flex-direction: column ;

}
.testimonial >.testimonial-image{ /*imagem....Para estilizar a imagem dentro dos elementos .testimonial, você deve usar o seletor filho > para selecionar a imagem dentro desses elementos*/
    height: 200px;
    width: auto;
    border-radius: 50%; /*Faz a imagem ficar redonda*/
    margin: 15px;

}
/*Gallery*/

#gallery{
    width: 90%;
    margin: auto;
    padding:50px ;
}

#gallery-container{
    display: grid;
    grid-template-columns: repeat(2,1fr);
    grid-gap: 30px;
    justify-items: center;
}

.gallery-image{
    display: inline-block;
    width: 540px;
    height: 360px;
    border-radius: 5px;

}
/*footer*/

#footer{
  height: 100%;
  background: #222;
  color: #eee;
  text-align: center;
  padding: 20px;
}
/*Parei no min 44:25*/



